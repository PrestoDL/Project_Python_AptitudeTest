python20230531

########소프트웨어 직종의 개요########

컴퓨터 프로그램을 설계하는 직종들로, 그 풀은 굉장히 넓은 편이다
*컴퓨터 과학자
*보안 개발자
*소프트웨어 개발자
*웹 개발자
*시스템 개발자
*데이터 전문가
등등...
이들이 공통적으로 함유해야 할 역량은 다음과 같다
<컴퓨터 언어, 논리>
이들 대부분은 개발하는 대상만 다를 뿐 다들 컴퓨터 프로그램을 다루는 직업들이다
따라서 기본적으로 프로그래밍 언어에 밝아야 한다
프로그래밍 언어는 보통 논리적인 구성으로 짜여 있으므로,
기본적인 수학, 회로 구성과 같은 논리에 강할수록 프로그래밍을 잘 하는 경향이 있다

<흥미, 트렌드, 공부>
언어는 개발자의 뿌리가 되며, IT업계 특성상 언어와 툴 등이 끊임없이 나오기에
해당 직종, 그리고 프로그래밍 자체에 대한 흥미를 기반으로 트렌드를 끊임없이 따라가야 한다
다른 직업에 비해 학벌이 그렇게까지 중요시되진 않는데, 그 이유 중 하나가 이것이다
깊게, 그리고 다양한 언어를 알수록 좋다. 상황에 따른 장점이 살아나는 언어들이 많기 때문에 유연한 대처 가능

<영어, 웹 수집 능력>
개발자들끼리의 커뮤니티(깃헙, 스택오버플로우 등)는 꽤 활발한 편인데, 새로운 것이 나오거나 팁 등이 공유된다
이들 대부분은 영어를 기반으로 소통하므로, 기본적인 영어 또한 할 수 있어야 한다

<체력>
의외로 체력이 요구된다
이들 대부분은 일하는 동안 책상 앞에만 앉아 있을텐데 건강상 문제가 발생할 수 있다
허리, 손목, 눈 등의 건강은 챙길 줄 알아야 하며 근력, 지구력 부족을 피하기 위한 운동도 필요하다

<소통 능력>
프로그래머는 여럿과 협업하는 경우가 다수이고
여러 명이 하나의 프로그램을 다룬다면 충돌이 생길 수밖에 없다
프로젝트 진행 중 소통은 기본이다

<책임감>
자신의 행동 및 결과물에 대한 책임감이 있어야 한다
책임감이 없이 프로그램을 만든다면 절대로 실력이 늘 수 없으며
눈에 보이는 오류, 숨겨진 오류 등을 즉시 고치지 않는다면 문제는 기하급수적으로 커질 수 있다
책임감이 없다면 끊임없이 바뀌는 IT업계에서 퇴보할 수밖에 없다





########클래스와 자료구조의 사용########

질문 자체의 다양성 등을 제외한다면 사실 굉장히 간단한 프로그램임
기본적으로 질문 몇 가지를 내놓고, 그에 따른 대답에 가중치를 매겨
다음 질문을 결정하거나 나중에 가중치를 합산하여 결과를 내는 데 사용

클래스와 자료구조를 사용해볼 방안을 생각해봤는데
워낙 간단한 프로그램이다 보니 사용할 구간이 떠오르지 않았음..

제일 이상적인 모델은 id나 이름을 입력해 이를 결과와 같이 저장하고
지난 결과를 불러올 때 id를 사용하여 불러올 수 있게끔 하여
각 결과를 각각의 클래스에 입력해 열람할 수 있게 하기



########프로그래밍 역할분담########

위에서 말했듯 프로그램은 굉장히 단순한 편
Tkinter 인터페이스에서 모든 걸 처리한다는 가정하에 할일은 다음과 같이 나눌 수 있다고 봄

*질문지와 대답, 가중치, 가중치에 따른 다음 질문과 결과를 내는 데 필요한 가중치 결정하고 조합하기
*만들어진 질문지와 대답을 이용해 기초적인 틀 닦기
*GUI 디자인 및 다듬기
*완료된 결과 저장하기, 불러오기(id를 통한) 기능 짜기
 +욕심이 난다면 온라인 연결로 저장 및 불러오기 기능 구축해보기


프로그램을 짜면서 사용하는 변수 등이 겹치면 안 되므로
수시로 변수명을 조율하고 #주석을 달아 소통에 집중해보기